/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'buildlogic.java-application-conventions'
}

dependencies {
  implementation 'org.apache.commons:commons-text'
  // for running as a Spark application for real, this could be compile-only


  implementation libs.substrait.core
  implementation libs.substrait.spark
  implementation libs.spark.sql

  // For a real Spark application, these would not be required since they would be in the Spark server classpath
  runtimeOnly libs.spark.core
// https://mvnrepository.com/artifact/org.apache.spark/spark-hive
    runtimeOnly libs.spark.hive



}

def jvmArguments = [
  "--add-exports",
  "java.base/sun.nio.ch=ALL-UNNAMED",
  "--add-opens=java.base/java.net=ALL-UNNAMED",
  "--add-opens=java.base/java.nio=ALL-UNNAMED",
  "-Dspark.master=local"
]

application {
    // Define the main class for the application.
    mainClass = 'io.substrait.examples.App'
    applicationDefaultJvmArgs = jvmArguments
}

jar {
    zip64 = true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'io.substrait.examples.App'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
}

repositories {

}
